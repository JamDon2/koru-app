// This file is auto-generated by @hey-api/openapi-ts

export type BodyPasswordLogin = {
  grant_type?: string | null;
  username: string;
  password: string;
  scope?: string;
  client_id?: string | null;
  client_secret?: string | null;
};

export type ErrorResponse = {
  detail: string;
};

export type HttpValidationError = {
  detail?: Array<ValidationError>;
};

export type MessageResponse = {
  message: string;
};

export type Token = {
  access_token: string;
};

export type User = {
  name: string;
  email: string;
};

export type ValidationError = {
  loc: Array<string | number>;
  msg: string;
  type: string;
};

export type PasswordLoginData = {
  body: BodyPasswordLogin;
  path?: never;
  query?: never;
  url: "/auth/login/password";
};

export type PasswordLoginErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type PasswordLoginError = PasswordLoginErrors[keyof PasswordLoginErrors];

export type PasswordLoginResponses = {
  /**
   * Successful Response
   */
  200: Token;
};

export type PasswordLoginResponse =
  PasswordLoginResponses[keyof PasswordLoginResponses];

export type RefreshTokenData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/auth/refresh";
};

export type RefreshTokenErrors = {
  /**
   * Unauthorized
   */
  401: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type RefreshTokenError = RefreshTokenErrors[keyof RefreshTokenErrors];

export type RefreshTokenResponses = {
  /**
   * Successful Response
   */
  200: Token;
};

export type RefreshTokenResponse =
  RefreshTokenResponses[keyof RefreshTokenResponses];

export type RootData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/";
};

export type RootResponses = {
  /**
   * Successful Response
   */
  200: MessageResponse;
};

export type RootResponse = RootResponses[keyof RootResponses];

export type HelloWorldData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/hello";
};

export type HelloWorldResponses = {
  /**
   * Successful Response
   */
  200: MessageResponse;
};

export type HelloWorldResponse = HelloWorldResponses[keyof HelloWorldResponses];

export type PingData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/ping";
};

export type PingResponses = {
  /**
   * Successful Response
   */
  200: MessageResponse;
};

export type PingResponse = PingResponses[keyof PingResponses];

export type CreateUserData = {
  body: User;
  path?: never;
  query?: never;
  url: "/users";
};

export type CreateUserErrors = {
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateUserError = CreateUserErrors[keyof CreateUserErrors];

export type CreateUserResponses = {
  /**
   * Successful Response
   */
  200: MessageResponse;
};

export type CreateUserResponse = CreateUserResponses[keyof CreateUserResponses];

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
