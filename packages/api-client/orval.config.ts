export default {
  reactQueryClient: {
    input: {
      target: "../../apps/api/generated/openapi.json",
    },
    output: {
      workspace: "./src/react-query",
      target: "index.ts",
      schemas: "../model",
      client: "react-query",
      mode: "tags-split",
      override: {
        header: (info) => [
          `Generated by Orval ${info.version} for Zod Schemas üç∫`,
          `Do not edit manually. Regenerate with "pnpm generate:api-client".`,
          `${info.title}`,
          `OpenAPI spec version: ${info.version}`,
        ],
        mutator: {
          // Path to the file exporting our custom fetcher
          path: "../lib/axiosInstance.ts",
          // Name of the exported function to be used by React Query
          name: "customInstance",
        },
      },
    },
    hooks: {
      afterAllFilesWrite: [
        'prettier --write "src/react-query/**/*.{ts,tsx}"',
        'prettier --write "src/model/**/*.ts"',
      ],
    },
  },

  axiosClient: {
    input: {
      target: "../../apps/api/generated/openapi.json",
    },
    output: {
      workspace: "./src/axios",
      target: "index.ts",
      schemas: "../model",
      mode: "tags-split",
      override: {
        header: (info) => [
          `Generated by Orval ${info.version} for Zod Schemas üç∫`,
          `Do not edit manually. Regenerate with "pnpm generate:api-client".`,
          `${info.title}`,
          `OpenAPI spec version: ${info.version}`,
        ],
        mutator: {
          // Path to the file exporting our custom fetcher
          path: "../lib/axiosInstance.ts",
          // Name of the exported function to be used by React Query
          name: "customInstance",
        },
      },
    },

    hooks: {
      afterAllFilesWrite: 'prettier --write "src/axios/**/*.ts"',
    },
  },

  zodSchemas: {
    input: {
      target: "../../apps/api/generated/openapi.json",
    },
    output: {
      workspace: "./src/zod",
      target: "index.ts",
      schemas: "../model",
      client: "zod",
      mode: "tags-split",
      override: {
        header: (info) => [
          `Generated by Orval ${info.version} for Zod Schemas üç∫`,
          `Do not edit manually. Regenerate with "pnpm generate:api-client".`,
          `${info.title}`,
          `OpenAPI spec version: ${info.version}`,
        ],
      },
    },

    hooks: {
      afterAllFilesWrite: 'prettier --write "src/zod/**/*.ts"',
    },
  },
};
