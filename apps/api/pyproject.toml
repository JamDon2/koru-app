[project]
name = "api"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "alembic>=1.15.2",
    "celery-types>=0.23.0",
    "celery[librabbitmq]>=5.5.2",
    "fastapi[standard]>=0.115.12",
    "gevent>=25.5.1",
    "nanoid>=2.0.0",
    "passlib[bcrypt]>=1.7.4",
    "pika>=1.3.2",
    "psycopg[binary]>=3.2.9",
    "pydantic-settings>=2.9.1",
    "pyjwt>=2.10.1",
    "redis>=6.1.0",
    "requests>=2.32.3",
    "sqlmodel>=0.0.24",
]

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "ruff>=0.11.9",
    "types-nanoid>=2.0.0.20240601",
    "types-passlib>=1.7.7.20250408",
    "types-pika>=1.2.0b1",
    "types-redis>=4.6.0.20241004",
    "types-requests>=2.32.0.20250515",
]

# --- Ruff Configuration (Linter & Formatter) ---
[tool.ruff]
line-length = 88 # PEP 8 compatible (like Black)
target-version = "py312" # Minimum Python version to target
exclude = [
    "migrations/*",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort (import sorting)
    "UP", # pyupgrade
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "A",  # flake8-builtins
    "PT", # flake8-pytest-style
    "SIM", # flake8-simplify
    "TID", # flake8-tidy-imports
    "RUF", # Ruff-specific rules
]

# --- MyPy Configuration (Optional Static Typing) ---
[tool.mypy]
python_version = "3.12"
warn_return_any = true
# disallow_untyped_defs = true
disallow_incomplete_defs = true
plugins = ['pydantic.mypy']
