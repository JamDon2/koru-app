"""add unique constraint, raw transaction data

Revision ID: f537b94200d3
Revises: 20960f21b210
Create Date: 2025-06-11 01:43:58.234664

"""
from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op


# revision identifiers, used by Alembic.
revision: str = 'f537b94200d3'
down_revision: str | None = '20960f21b210'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    processingstatus = sa.Enum('UNPROCESSED', 'PROCESSED', name='processingstatus')
    processingstatus.create(op.get_bind())
    op.create_index('ix_account_unique_identifiers', 'account', [sa.literal_column("coalesce(iban, '')"), sa.literal_column("coalesce(bban, '')"), sa.literal_column("coalesce(bic, '')"), sa.literal_column("coalesce(scan_code, '')")], unique=True)
    op.add_column('transaction', sa.Column('processing_status', processingstatus, server_default='UNPROCESSED', nullable=False))
    op.add_column('transaction', sa.Column('opposing_iban', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('transaction', sa.Column('opposing_bban', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.alter_column('transaction', 'gocardless_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('transaction', 'raw_counterparty_name', new_column_name='opposing_name', existing_type=sqlmodel.sql.sqltypes.AutoString(), existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('transaction', 'opposing_name', new_column_name='raw_counterparty_name', existing_type=sqlmodel.sql.sqltypes.AutoString(), existing_nullable=False)
    op.alter_column('transaction', 'gocardless_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('transaction', 'opposing_bban')
    op.drop_column('transaction', 'opposing_iban')
    op.drop_column('transaction', 'processing_status')
    op.drop_index('ix_account_unique_identifiers', table_name='account')
    op.execute('DROP TYPE processingstatus;')
    # ### end Alembic commands ###
